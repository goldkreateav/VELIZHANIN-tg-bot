const { Telegraf, session, Markup } = require('telegraf');
const { authMiddleware } = require('./middlewares/auth');
const { loggerMiddleware } = require('./middlewares/logger');

// –ò–º–ø–æ—Ä—Ç –∫–æ–º–∞–Ω–¥
const startCommand = require('./commands/start');
const helpCommand = require('./commands/help');
const pingCommand = require('./commands/ping');

// –ò–º–ø–æ—Ä—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
const { questStartHandler, questAnswerHandler } = require('./handlers/quest');
const { aiAdviceHandler, aiTextHandler } = require('./handlers/ai');
const { leaderboardHandler } = require('./handlers/leaderboard');
const { mainMenuHandler } = require('./handlers/mainMenu');
const { feedbackStartHandler, feedbackTextHandler } = require('./handlers/feedback');

// –ò–º–ø–æ—Ä—Ç —É—Ç–∏–ª–∏—Ç
const { safeMarkdownMessage } = require('./utils/format');

// –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞
const bot = new Telegraf(process.env.BOT_TOKEN);

// Middleware –¥–ª—è —Å–µ—Å—Å–∏–π
bot.use(session());

// Middleware –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
bot.use(loggerMiddleware);

// Middleware –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
bot.use(authMiddleware);

// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥
bot.command('start', startCommand);
bot.command('help', helpCommand);
bot.command('ping', pingCommand);

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ callback-–∫–Ω–æ–ø–æ–∫
bot.action('quest_start', questStartHandler);
bot.action(/^quest_answer_/, questAnswerHandler);
bot.action('ai_advice', aiAdviceHandler);
bot.action('leaderboard', leaderboardHandler);
bot.action('main_menu', mainMenuHandler);
bot.action('feedback_start', feedbackStartHandler);

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ Mini App
bot.action('mini_app_info', async (ctx) => {
  try {
    await ctx.answerCbQuery();
    
    const message = `üì± *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Mini App*

Mini App —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å HTTPS —Å—Å—ã–ª–∫–∞–º–∏ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ.

üîß *–î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:*
‚Ä¢ –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä
‚Ä¢ –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:3000
‚Ä¢ –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏

üöÄ *–î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞:*
‚Ä¢ –ó–∞–¥–µ–ø–ª–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ Heroku/Vercel
‚Ä¢ –ü–æ–ª—É—á–∏—Ç–µ HTTPS URL
‚Ä¢ –î–æ–±–∞–≤—å—Ç–µ URL –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é MINI_APP_URL

üìä *–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ Mini App:*
‚Ä¢ –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
‚Ä¢ –§–æ—Ä–º–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞
‚Ä¢ –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω –ø–æ–¥ Telegram`;

    const keyboard = Markup.inlineKeyboard([
      [Markup.button.callback('üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'main_menu')]
    ]);
    
    await ctx.reply(message, { 
      parse_mode: 'Markdown',
      ...keyboard 
    });
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ mini_app_info:', error);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('text', async (ctx) => {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤ –∫–∞–∫–æ–º —Ä–µ–∂–∏–º–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
  if (ctx.session && ctx.session.feedbackState) {
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∫ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å
    await feedbackTextHandler(ctx);
  } else {
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∫ AI –∑–∞–ø—Ä–æ—Å
    await aiTextHandler(ctx);
  }
});

bot.action('about', async (ctx) => {
  try {
    await ctx.answerCbQuery();
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç–æ–π —Ç–µ–∫—Å—Ç –±–µ–∑ Markdown –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –æ—à–∏–±–æ–∫ –ø–∞—Ä—Å–∏–Ω–≥–∞
    const aboutMessage = `‚ÑπÔ∏è –û –±–æ—Ç–µ VELIZHANIN

üéØ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
‚Ä¢ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –∫–≤–µ—Å—Ç —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏
‚Ä¢ AI-—Å–æ–≤–µ—Ç–Ω–∏–∫ –Ω–∞ –±–∞–∑–µ OpenAI
‚Ä¢ –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤
‚Ä¢ –ú–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏

üöÄ –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:
‚Ä¢ Node.js + Telegraf
‚Ä¢ SQLite –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
‚Ä¢ OpenAI GPT-3.5
‚Ä¢ Telegram Mini App

üë®‚Äçüíª –†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–æ –¥–ª—è: –°—Ç—É–¥–∏—è VELIZHANIN

üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞: @goldreateav`;
    
    await ctx.reply(aboutMessage);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ about:', error);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ.');
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
bot.catch((err, ctx) => {
  console.error('–û—à–∏–±–∫–∞ –≤ –±–æ—Ç–µ:', err);
  ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
});

module.exports = { bot };
