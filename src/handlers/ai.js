const { Markup } = require('telegraf');
const apiService = require('../services/api');
const db = require('../services/db');

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—É—Å–∫–∞ AI-—Å–æ–≤–µ—Ç–Ω–∏–∫–∞
const aiAdviceHandler = async (ctx) => {
  try {
    await ctx.answerCbQuery();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Å—Å–∏—é –¥–ª—è AI
    if (!ctx.session) {
      ctx.session = {};
    }
    ctx.session.aiState = 'waiting_question';
    
    const message = `ü§ñ *AI-—Å–æ–≤–µ—Ç–Ω–∏–∫ –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å!*\n\n–ó–∞–¥–∞–π—Ç–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –¥–∞—Ç—å –ø–æ–ª–µ–∑–Ω—ã–π –æ—Ç–≤–µ—Ç.\n\nüí° *–ü—Ä–∏–º–µ—Ä—ã –≤–æ–ø—Ä–æ—Å–æ–≤:*\n‚Ä¢ –ö–∞–∫ —É–ª—É—á—à–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å?\n‚Ä¢ –ß—Ç–æ —Ç–∞–∫–æ–µ –º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ?\n‚Ä¢ –ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å Telegram –±–æ—Ç–∞?\n‚Ä¢ –°–æ–≤–µ—Ç—ã –ø–æ –∏–∑—É—á–µ–Ω–∏—é –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è\n\n–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å:`;
    
    const keyboard = Markup.inlineKeyboard([
      [Markup.button.callback('üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'main_menu')]
    ]);
    
    await ctx.reply(message, { 
      parse_mode: 'Markdown',
      ...keyboard 
    });
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ ai_advice:', error);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ AI-—Å–æ–≤–µ—Ç–Ω–∏–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
};

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è AI
const aiTextHandler = async (ctx) => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Ä–µ–∂–∏–º–µ AI
    if (!ctx.session || ctx.session.aiState !== 'waiting_question') {
      return;
    }
    
    const question = ctx.message.text;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏
    await ctx.sendChatAction('typing');
    
    try {
      // –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç AI
      const aiResponse = await apiService.getAIResponse(question, ctx.from.id);
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
      const user = await db.getUserByTelegramId(ctx.from.id);
      if (user) {
        await db.saveAIRequest(user.id, question, aiResponse);
      }
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
      await ctx.reply(`ü§ñ *AI-–æ—Ç–≤–µ—Ç:*\n\n${aiResponse}`, { 
        parse_mode: 'Markdown' 
      });
      
      // –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∑–∞–¥–∞—Ç—å –µ—â–µ –≤–æ–ø—Ä–æ—Å
      const keyboard = Markup.inlineKeyboard([
        [Markup.button.callback('üîÑ –ó–∞–¥–∞—Ç—å –µ—â–µ –≤–æ–ø—Ä–æ—Å', 'ai_advice')],
        [Markup.button.callback('üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'main_menu')]
      ]);
      
      await ctx.reply('üí≠ –ï—Å—Ç—å –µ—â–µ –≤–æ–ø—Ä–æ—Å—ã? –ò–ª–∏ –≤–µ—Ä–Ω–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é?', keyboard);
      
    } catch (aiError) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ AI:', aiError);
      
      // Fallback - —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç
      const fallbackResponse = await apiService.getRandomFact();
      
      await ctx.reply(`ü§ñ *–ò–∑–≤–∏–Ω–∏—Ç–µ, AI –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω*\n\n–ù–æ –≤–æ—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç:\n\n${fallbackResponse}`, { 
        parse_mode: 'Markdown' 
      });
      
      const keyboard = Markup.inlineKeyboard([
        [Markup.button.callback('üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞', 'ai_advice')],
        [Markup.button.callback('üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'main_menu')]
      ]);
      
      await ctx.reply('–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.', keyboard);
    }
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ AI
    ctx.session.aiState = null;
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ ai_text:', error);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–æ–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    if (ctx.session) {
      ctx.session.aiState = null;
    }
  }
};

module.exports = {
  aiAdviceHandler,
  aiTextHandler
};
