const { Markup } = require('telegraf');

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
const mainMenuHandler = async (ctx) => {
  try {
    await ctx.answerCbQuery();
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏
    if (ctx.session) {
      ctx.session.questState = null;
      ctx.session.aiState = null;
      ctx.session.questAnswers = null;
      ctx.session.questQuestions = null;
      ctx.session.questCurrentQuestion = null;
      ctx.session.userState = 'main_menu';
    }
    
    const firstName = ctx.from.first_name || '–î—Ä—É–≥';
    
    const welcomeMessage = `üè† *–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é*\n\n–ü—Ä–∏–≤–µ—Ç, ${firstName}!\n\n–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:`;
    
    // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
    const buttons = [
      [Markup.button.callback('üéØ –ü—Ä–æ–π—Ç–∏ –∫–≤–µ—Å—Ç', 'quest_start')],
      [Markup.button.callback('ü§ñ –ü–æ–ª—É—á–∏—Ç—å —Å–æ–≤–µ—Ç –æ—Ç –ò–ò', 'ai_advice')],
      [Markup.button.callback('üèÜ –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤', 'leaderboard')],
      [Markup.button.callback('üí¨ –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤', 'feedback_start')]
    ];
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É Mini App —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ URL –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å HTTPS
    const miniAppUrl = (process.env.MINI_APP_URL || '').trim();
    if (miniAppUrl && miniAppUrl.startsWith('https://')) {
      buttons.push([Markup.button.webApp('üì± –û—Ç–∫—Ä—ã—Ç—å Mini App', miniAppUrl)]);
    } else if (process.env.NODE_ENV === 'development') {
      // –í —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ Mini App
      buttons.push([Markup.button.callback('üì± Mini App (—Ç–æ–ª—å–∫–æ HTTPS)', 'mini_app_info')]);
    }
    
    buttons.push([Markup.button.callback('‚ÑπÔ∏è –û –±–æ—Ç–µ', 'about')]);
    
    const keyboard = Markup.inlineKeyboard(buttons);
    
    await ctx.reply(welcomeMessage, { 
      parse_mode: 'Markdown',
      ...keyboard 
    });
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ main_menu:', error);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start.');
  }
};

module.exports = {
  mainMenuHandler
};
